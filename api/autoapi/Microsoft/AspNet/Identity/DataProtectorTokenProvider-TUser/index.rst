

DataProtectorTokenProvider<TUser> Class
=======================================



.. contents:: 
   :local:



Summary
-------

Provides protection and validation of identity tokens.





Inheritance Hierarchy
---------------------


* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNet.Identity.DataProtectorTokenProvider\<TUser>`








Syntax
------

.. code-block:: csharp

   public class DataProtectorTokenProvider<TUser> : IUserTokenProvider<TUser> where TUser : class





GitHub
------

`View on GitHub <https://github.com/aspnet/identity/blob/master/src/Microsoft.AspNet.Identity/DataProtectionTokenProvider.cs>`_





.. dn:class:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>

Constructors
------------

.. dn:class:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>
    :noindex:
    :hidden:

    
    .. dn:constructor:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.DataProtectorTokenProvider(Microsoft.AspNet.DataProtection.IDataProtectionProvider, Microsoft.Extensions.OptionsModel.IOptions<Microsoft.AspNet.Identity.DataProtectionTokenProviderOptions>)
    
        
    
        Initializes a new instance of the :any:`Microsoft.AspNet.Identity.DataProtectorTokenProvider\`1` class.
    
        
        
        
        :param dataProtectionProvider: The system data protection provider.
        
        :type dataProtectionProvider: Microsoft.AspNet.DataProtection.IDataProtectionProvider
        
        
        :param options: The configured .
        
        :type options: Microsoft.Extensions.OptionsModel.IOptions{Microsoft.AspNet.Identity.DataProtectionTokenProviderOptions}
    
        
        .. code-block:: csharp
    
           public DataProtectorTokenProvider(IDataProtectionProvider dataProtectionProvider, IOptions<DataProtectionTokenProviderOptions> options)
    

Methods
-------

.. dn:class:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>
    :noindex:
    :hidden:

    
    .. dn:method:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.CanGenerateTwoFactorTokenAsync(Microsoft.AspNet.Identity.UserManager<TUser>, TUser)
    
        
    
        Returns a boolean indicating whether a token generated by this instance
        can be used as a Two Factor Authentication token as an asynchronous operation.
    
        
        
        
        :param manager: The  to retrieve user properties from.
        
        :type manager: Microsoft.AspNet.Identity.UserManager{{TUser}}
        
        
        :param user: The  the token was generated for.
        
        :type user: {TUser}
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the result of the asynchronous query,
            containing true if a token generated by this instance can be used as a Two Factor Authentication token, otherwise false.
    
        
        .. code-block:: csharp
    
           public virtual Task<bool> CanGenerateTwoFactorTokenAsync(UserManager<TUser> manager, TUser user)
    
    .. dn:method:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.GenerateAsync(System.String, Microsoft.AspNet.Identity.UserManager<TUser>, TUser)
    
        
    
        Generates a protected token for the specified ``user`` as an asynchronous operation.
    
        
        
        
        :param purpose: The purpose the token will be used for.
        
        :type purpose: System.String
        
        
        :param manager: The  to retrieve user properties from.
        
        :type manager: Microsoft.AspNet.Identity.UserManager{{TUser}}
        
        
        :param user: The  the token will be generated from.
        
        :type user: {TUser}
        :rtype: System.Threading.Tasks.Task{System.String}
        :return: A <see cref="T:System.Threading.Tasks.Task`1" /> representing the generated token.
    
        
        .. code-block:: csharp
    
           public virtual Task<string> GenerateAsync(string purpose, UserManager<TUser> manager, TUser user)
    
    .. dn:method:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.NotifyAsync(System.String, Microsoft.AspNet.Identity.UserManager<TUser>, TUser)
    
        
    
        Creates a notification for the specified ``user`` based on the supplied ``token`` as an asynchronous operation.
    
        
        
        
        :param token: The token to generate notifications for.
        
        :type token: System.String
        
        
        :param manager: The  to retrieve user properties from.
        
        :type manager: Microsoft.AspNet.Identity.UserManager{{TUser}}
        
        
        :param user: The  the token was generated for.
        
        :type user: {TUser}
        :rtype: System.Threading.Tasks.Task
        :return: A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous notification.
    
        
        .. code-block:: csharp
    
           public virtual Task NotifyAsync(string token, UserManager<TUser> manager, TUser user)
    
    .. dn:method:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.ValidateAsync(System.String, System.String, Microsoft.AspNet.Identity.UserManager<TUser>, TUser)
    
        
    
        Validates the protected ``token`` for the specified ``user`` and ``purpose`` as an asynchronous operation.
    
        
        
        
        :param purpose: The purpose the token was be used for.
        
        :type purpose: System.String
        
        
        :param token: The token to validate.
        
        :type token: System.String
        
        
        :param manager: The  to retrieve user properties from.
        
        :type manager: Microsoft.AspNet.Identity.UserManager{{TUser}}
        
        
        :param user: The  the token was generated for.
        
        :type user: {TUser}
        :rtype: System.Threading.Tasks.Task{System.Boolean}
        :return: A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the result of the asynchronous validation,
            containing true if the token is valid, otherwise false.
    
        
        .. code-block:: csharp
    
           public virtual Task<bool> ValidateAsync(string purpose, string token, UserManager<TUser> manager, TUser user)
    

Properties
----------

.. dn:class:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>
    :noindex:
    :hidden:

    
    .. dn:property:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.Name
    
        
    
        Gets the name of this instance.
    
        
        :rtype: System.String
    
        
        .. code-block:: csharp
    
           public string Name { get; }
    
    .. dn:property:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.Options
    
        
    
        Gets the :any:`Microsoft.AspNet.Identity.DataProtectionTokenProviderOptions` for this instance.
    
        
        :rtype: Microsoft.AspNet.Identity.DataProtectionTokenProviderOptions
    
        
        .. code-block:: csharp
    
           protected DataProtectionTokenProviderOptions Options { get; }
    
    .. dn:property:: Microsoft.AspNet.Identity.DataProtectorTokenProvider<TUser>.Protector
    
        
    
        Gets the :any:`Microsoft.AspNet.DataProtection.IDataProtector` for this instance.
    
        
        :rtype: Microsoft.AspNet.DataProtection.IDataProtector
    
        
        .. code-block:: csharp
    
           protected IDataProtector Protector { get; }
    

