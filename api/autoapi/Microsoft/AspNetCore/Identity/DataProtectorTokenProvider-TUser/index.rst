

DataProtectorTokenProvider<TUser> Class
=======================================






Provides protection and validation of identity tokens.


Namespace
    :dn:ns:`Microsoft.AspNetCore.Identity`
Assemblies
    * Microsoft.AspNetCore.Identity

----

.. contents::
   :local:



Inheritance Hierarchy
---------------------


* :dn:cls:`System.Object`
* :dn:cls:`Microsoft.AspNetCore.Identity.DataProtectorTokenProvider\<TUser>`








Syntax
------

.. code-block:: csharp

    public class DataProtectorTokenProvider<TUser> : IUserTwoFactorTokenProvider<TUser> where TUser : class








.. dn:class:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider`1
    :hidden:

.. dn:class:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>

Properties
----------

.. dn:class:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>
    :noindex:
    :hidden:

    
    .. dn:property:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.Name
    
        
    
        
        Gets the name of this instance.
    
        
        :rtype: System.String
        :return: 
            The name of this instance.
    
        
        .. code-block:: csharp
    
            public string Name
            {
                get;
            }
    
    .. dn:property:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.Options
    
        
    
        
        Gets the :any:`Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions` for this instance.
    
        
        :rtype: Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions
        :return: 
            The :any:`Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions` for this instance.
    
        
        .. code-block:: csharp
    
            protected DataProtectionTokenProviderOptions Options
            {
                get;
            }
    
    .. dn:property:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.Protector
    
        
    
        
        Gets the :any:`Microsoft.AspNetCore.DataProtection.IDataProtector` for this instance.
    
        
        :rtype: Microsoft.AspNetCore.DataProtection.IDataProtector
        :return: 
            The :any:`Microsoft.AspNetCore.DataProtection.IDataProtector` for this instance.
    
        
        .. code-block:: csharp
    
            protected IDataProtector Protector
            {
                get;
            }
    

Constructors
------------

.. dn:class:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>
    :noindex:
    :hidden:

    
    .. dn:constructor:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.DataProtectorTokenProvider(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions>)
    
        
    
        
        Initializes a new instance of the :any:`Microsoft.AspNetCore.Identity.DataProtectorTokenProvider\`1` class.
    
        
    
        
        :param dataProtectionProvider: The system data protection provider.
        
        :type dataProtectionProvider: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
    
        
        :param options: The configured :any:`Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions`\.
        
        :type options: Microsoft.Extensions.Options.IOptions<Microsoft.Extensions.Options.IOptions`1>{Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions<Microsoft.AspNetCore.Identity.DataProtectionTokenProviderOptions>}
    
        
        .. code-block:: csharp
    
            public DataProtectorTokenProvider(IDataProtectionProvider dataProtectionProvider, IOptions<DataProtectionTokenProviderOptions> options)
    

Methods
-------

.. dn:class:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>
    :noindex:
    :hidden:

    
    .. dn:method:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.CanGenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.UserManager<TUser>, TUser)
    
        
    
        
        Returns a :any:`System.Boolean` indicating whether a token generated by this instance
        can be used as a Two Factor Authentication token as an asynchronous operation.
    
        
    
        
        :param manager: The :any:`Microsoft.AspNetCore.Identity.UserManager\`1` to retrieve user properties from.
        
        :type manager: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.UserManager`1>{TUser}
    
        
        :param user: The <em>TUser</em> the token was generated for.
        
        :type user: TUser
        :rtype: System.Threading.Tasks.Task<System.Threading.Tasks.Task`1>{System.Boolean<System.Boolean>}
        :return: 
            A :any:`System.Threading.Tasks.Task\`1` that represents the result of the asynchronous query,
            containing true if a token generated by this instance can be used as a Two Factor Authentication token, otherwise false.
    
        
        .. code-block:: csharp
    
            public virtual Task<bool> CanGenerateTwoFactorTokenAsync(UserManager<TUser> manager, TUser user)
    
    .. dn:method:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.GenerateAsync(System.String, Microsoft.AspNetCore.Identity.UserManager<TUser>, TUser)
    
        
    
        
        Generates a protected token for the specified <em>user</em> as an asynchronous operation.
    
        
    
        
        :param purpose: The purpose the token will be used for.
        
        :type purpose: System.String
    
        
        :param manager: The :any:`Microsoft.AspNetCore.Identity.UserManager\`1` to retrieve user properties from.
        
        :type manager: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.UserManager`1>{TUser}
    
        
        :param user: The <em>TUser</em> the token will be generated from.
        
        :type user: TUser
        :rtype: System.Threading.Tasks.Task<System.Threading.Tasks.Task`1>{System.String<System.String>}
        :return: A :any:`System.Threading.Tasks.Task\`1` representing the generated token.
    
        
        .. code-block:: csharp
    
            public virtual Task<string> GenerateAsync(string purpose, UserManager<TUser> manager, TUser user)
    
    .. dn:method:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.NotifyAsync(System.String, Microsoft.AspNetCore.Identity.UserManager<TUser>, TUser)
    
        
    
        
        Creates a notification for the specified <em>user</em> based on the supplied <em>token</em> as an asynchronous operation.
    
        
    
        
        :param token: The token to generate notifications for.
        
        :type token: System.String
    
        
        :param manager: The :any:`Microsoft.AspNetCore.Identity.UserManager\`1` to retrieve user properties from.
        
        :type manager: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.UserManager`1>{TUser}
    
        
        :param user: The <em>TUser</em> the token was generated for.
        
        :type user: TUser
        :rtype: System.Threading.Tasks.Task
        :return: A :any:`System.Threading.Tasks.Task\`1` that represents the asynchronous notification.
    
        
        .. code-block:: csharp
    
            public virtual Task NotifyAsync(string token, UserManager<TUser> manager, TUser user)
    
    .. dn:method:: Microsoft.AspNetCore.Identity.DataProtectorTokenProvider<TUser>.ValidateAsync(System.String, System.String, Microsoft.AspNetCore.Identity.UserManager<TUser>, TUser)
    
        
    
        
        Validates the protected <em>token</em> for the specified <em>user</em> and <em>purpose</em> as an asynchronous operation.
    
        
    
        
        :param purpose: The purpose the token was be used for.
        
        :type purpose: System.String
    
        
        :param token: The token to validate.
        
        :type token: System.String
    
        
        :param manager: The :any:`Microsoft.AspNetCore.Identity.UserManager\`1` to retrieve user properties from.
        
        :type manager: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.UserManager`1>{TUser}
    
        
        :param user: The <em>TUser</em> the token was generated for.
        
        :type user: TUser
        :rtype: System.Threading.Tasks.Task<System.Threading.Tasks.Task`1>{System.Boolean<System.Boolean>}
        :return: 
            A :any:`System.Threading.Tasks.Task\`1` that represents the result of the asynchronous validation,
            containing true if the token is valid, otherwise false.
    
        
        .. code-block:: csharp
    
            public virtual Task<bool> ValidateAsync(string purpose, string token, UserManager<TUser> manager, TUser user)
    

